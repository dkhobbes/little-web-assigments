{"version":3,"sources":["input-component.js"],"names":["window","SW","InputComponent","state","apiResult","items","evt","console","log","keyCode","$","ajax","url","myInput","value","done","data","setState","keyUpHappening","input","map","info","id","login","html_url","React","Component"],"mappings":";;;;;;;;;;AAAAA,OAAOC,EAAP,GAAYD,OAAOC,EAAP,IAAa,EAAzB;AACA,CAAC,YAAW;AAAA,MAENC,cAFM;AAAA;;AAIV,8BAAa;AAAA;;AAAA;;AAEX,YAAKC,KAAL,GAAY;AACVC,mBAAU;AACRC,iBAAM;AADE;AADA,OAAZ;AAFW;AAOZ;;AAXS;AAAA;AAAA,qCAeKC,GAfL,EAeU;AAAA;;AAChBC,gBAAQC,GAAR,CAAY,kBAAZ,EAAgCF,IAAIG,OAApC;;AAEA,YAAIH,IAAIG,OAAJ,KAAgB,EAApB,EAAwB;AACtBC,YAAEC,IAAF,CAAO;AACLC,iBAAK,2CAA2C,KAAKC,OAAL,CAAaC;AADxD,WAAP,EAGCC,IAHD,CAGM,UAACC,IAAD,EAAU;AACdT,oBAAQC,GAAR,CAAY,cAAZ,EAA4BQ,IAA5B;AACA,mBAAKC,QAAL,CAAc;AACZb,yBAAUY;AADE,aAAd;AAGD,WARD;AASD;AACF;AA7BO;AAAA;AAAA,+BA+BD;AAAA;;AACPT,gBAAQC,GAAR,CAAY,QAAZ,EAAsB,KAAKL,KAA3B;;AAEA,eAAO;AAAA;AAAA,YAAK,WAAU,YAAf;AACP;AAAA;AAAA,cAAI,WAAU,aAAd;AAAA;AAAA,WADO;AAEP,yCAAO,SAAS,iBAACG,GAAD,EAAS;AAAE,qBAAKY,cAAL,CAAoBZ,GAApB;AAA2B,aAAtD,EAAwD,KAAK,aAACa,KAAD,EAAW;AAAE,qBAAKN,OAAL,GAAeM,KAAf;AAAuB,aAAjG,GAFO;AAGP,0CAAQ,KAAI,uCAAZ,GAHO;AAIP;AAAA;AAAA,cAAI,WAAU,SAAd;AACG,iBAAKhB,KAAL,CAAWC,SAAX,CAAqBC,KAArB,CAA2Be,GAA3B,CAA+B,UAACC,IAAD,EAAU;AAAC,qBAAO;AAAA;AAAA,kBAAI,WAAU,KAAd,EAAoB,KAAKA,KAAKC,EAA9B;AAChD;AAAA;AAAA,oBAAK,WAAU,UAAf;AAA2BD,uBAAKE;AAAhC,iBADgD;AAEhD;AAAA;AAAA,oBAAK,WAAU,WAAf;AAA2B;AAAA;AAAA,sBAAG,QAAO,QAAV,EAAmB,MAAMF,KAAKG,QAA9B;AAAyCH,yBAAKG;AAA9C;AAA3B;AAFgD,eAAP;AAGnC,aAHP;AADH;AAJO,SAAP;AAYD;AA9CS;;AAAA;AAAA,IAEiBC,MAAMC,SAFvB;;AAgDVzB,KAAGC,cAAH,GAAoBA,cAApB;AAED,CAlDD","file":"input-component.js","sourcesContent":["window.SW = window.SW || {};\n(function() {\n\nclass InputComponent extends React.Component {\n\n  constructor(){\n    super();\n    this.state= {\n      apiResult:{\n        items:[]\n      }\n    }\n  }\n\n\n\n  keyUpHappening(evt) {\n      console.log('key up happening', evt.keyCode);\n\n      if (evt.keyCode === 13) {\n        $.ajax({\n          url: 'https://api.github.com/search/users?q=' + this.myInput.value\n        })\n        .done((data) => {\n          console.log('github data?', data);\n          this.setState({\n            apiResult:data\n          });\n        });\n      }\n    }\n\n  render() {\n    console.log('render', this.state);\n\n    return <div className=\"search-bar\">\n    <h1 className=\"title-intro\">Search for a github user </h1>\n    <input onKeyUp={(evt) => { this.keyUpHappening(evt); }} ref={(input) => { this.myInput = input; }} />\n    <iframe src=\"https://developer.github.com/changes/\"></iframe>\n    <ul className=\"results\">\n      {this.state.apiResult.items.map((info) => {return <li className=\"box\" key={info.id}>\n        <div className=\"name-api\">{info.login}</div>\n        <div className=\"login-api\"><a target=\"_blank\" href={info.html_url}>{info.html_url}</a></div>\n      </li>; })}\n    </ul>\n\n    </div>\n  }\n}\n  SW.InputComponent = InputComponent;\n\n})();\n"]}