{"version":3,"sources":["planet-list-components.js"],"names":["window","SW","PlanetListItem","state","isSelected","console","log","setState","currentClass","extraInfo","selectedClass","props","planet","climate","created","diameter","edited","gravity","orbital_period","population","rotation_period","surface_water","terrain","url","name","toggle","React","Component","PlanetListComponent","getTheData","$","ajax","done","data","apiResult","theList","results","map","index"],"mappings":"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","file":"planet-list-components.js","sourcesContent":["window.SW = window.SW || {};\n\n(function() {\n\n  class PlanetListItem extends React.Component {\n\n    constructor() {\n      super();\n      this.state = {\n        isSelected: false\n      };\n    }\n\n    toggle() {\n      console.log('hi');\n      this.setState({\n        isSelected: !this.state.isSelected\n      })\n    }\n\n    render() {\n      var currentClass = 'planet';\n      var extraInfo;\n\n      var selectedClass;\n      if (this.state.isSelected) {\n        currentClass += ' on';\n\n        extraInfo = <div>\n          <img src= \"https://s-media-cache-ak0.pinimg.com/736x/58/19/d9/5819d950c07b93e41f314655838038dc.jpg\" className=\"sw-logo\"/>\n          <div>Climate: {this.props.planet.climate}</div>\n          <div>Created: {this.props.planet.created}</div>\n          <div>Diameter: {this.props.planet.diameter}</div>\n          <div>Edited: {this.props.planet.edited}</div>\n          <div>Gravity: {this.props.planet.gravity}</div>\n          <div>Orbital-Period: {this.props.planet.orbital_period}</div>\n          <div>Population: {this.props.planet.population}</div>\n          <div>Rotation-period: {this.props.planet.rotation_period}</div>\n          <div>Surface-Water: {this.props.planet.surface_water}</div>\n          <div>Terrain: {this.props.planet.terrain}</div>\n          <div><a target=\"_blank\" href={this.props.planet.url}>{this.props.planet.name} URL link</a></div>\n\n        </div>\n      }\n\n      return <li className={currentClass} onClick={() => {this.toggle(); }}>\n      {this.props.planet.name}\n      {extraInfo}\n      </li>\n    }\n  }\n\n  class PlanetListComponent extends React.Component {\n\n    constructor() {\n      super();\n    }\n\n    componentDidMount() {\n      console.log('AppComponent.ComponentDidMount');\n      this.getTheData();\n    }\n\n    componentWillUnmount() {\n      console.log('AppComponent.ComponentWillUnmount');\n    }\n\n    getTheData() {\n      console.log('load the planets');\n    }\n\n    getTheData() {\n      $.ajax({\n        url: 'http://swapi.co/api/planets'\n      })\n      .done((data) => {\n        console.log('got data', data);\n\n        this.setState({\n          apiResult: data\n        });\n      });\n    }\n\n    render() {\n      console.log('render', this.state);\n      var theList;\n\n      if (this.state != null) {\n        theList = <ul>\n        {this.state.apiResult.results.map((planet, index) => { return <PlanetListItem key={index} planet={planet}/>; })}\n        </ul>;\n      }\n\n      return <div className=\"planet-list\">\n        <h1>Planet List</h1>\n        {theList}\n      </div>\n    }\n  }\n\n  SW.PlanetListComponent = PlanetListComponent;\n\n})();\n"]}